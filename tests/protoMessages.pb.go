// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protoMessages.proto

package tests

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProtoCommand struct {
	SomeNumber           int64    `protobuf:"varint,1,opt,name=some_number,json=someNumber,proto3" json:"some_number,omitempty"`
	SomeData             string   `protobuf:"bytes,2,opt,name=some_data,json=someData,proto3" json:"some_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoCommand) Reset()         { *m = ProtoCommand{} }
func (m *ProtoCommand) String() string { return proto.CompactTextString(m) }
func (*ProtoCommand) ProtoMessage()    {}
func (*ProtoCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1929c2ebf17cd0b, []int{0}
}

func (m *ProtoCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoCommand.Unmarshal(m, b)
}
func (m *ProtoCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoCommand.Marshal(b, m, deterministic)
}
func (m *ProtoCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoCommand.Merge(m, src)
}
func (m *ProtoCommand) XXX_Size() int {
	return xxx_messageInfo_ProtoCommand.Size(m)
}
func (m *ProtoCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoCommand.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoCommand proto.InternalMessageInfo

func (m *ProtoCommand) GetSomeNumber() int64 {
	if m != nil {
		return m.SomeNumber
	}
	return 0
}

func (m *ProtoCommand) GetSomeData() string {
	if m != nil {
		return m.SomeData
	}
	return ""
}

type EmptyProtoCommand struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyProtoCommand) Reset()         { *m = EmptyProtoCommand{} }
func (m *EmptyProtoCommand) String() string { return proto.CompactTextString(m) }
func (*EmptyProtoCommand) ProtoMessage()    {}
func (*EmptyProtoCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1929c2ebf17cd0b, []int{1}
}

func (m *EmptyProtoCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyProtoCommand.Unmarshal(m, b)
}
func (m *EmptyProtoCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyProtoCommand.Marshal(b, m, deterministic)
}
func (m *EmptyProtoCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyProtoCommand.Merge(m, src)
}
func (m *EmptyProtoCommand) XXX_Size() int {
	return xxx_messageInfo_EmptyProtoCommand.Size(m)
}
func (m *EmptyProtoCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyProtoCommand.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyProtoCommand proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ProtoCommand)(nil), "tests.ProtoCommand")
	proto.RegisterType((*EmptyProtoCommand)(nil), "tests.EmptyProtoCommand")
}

func init() { proto.RegisterFile("protoMessages.proto", fileDescriptor_a1929c2ebf17cd0b) }

var fileDescriptor_a1929c2ebf17cd0b = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xf7, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0x03, 0xf3, 0x84, 0x58, 0x4b, 0x52,
	0x8b, 0x4b, 0x8a, 0x95, 0x7c, 0xb8, 0x78, 0x02, 0x40, 0x7c, 0xe7, 0xfc, 0xdc, 0xdc, 0xc4, 0xbc,
	0x14, 0x21, 0x79, 0x2e, 0xee, 0xe2, 0xfc, 0xdc, 0xd4, 0xf8, 0xbc, 0xd2, 0xdc, 0xa4, 0xd4, 0x22,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x2e, 0x90, 0x90, 0x1f, 0x58, 0x44, 0x48, 0x9a, 0x8b,
	0x13, 0xac, 0x20, 0x25, 0xb1, 0x24, 0x51, 0x82, 0x49, 0x81, 0x51, 0x83, 0x33, 0x88, 0x03, 0x24,
	0xe0, 0x92, 0x58, 0x92, 0xa8, 0x24, 0xcc, 0x25, 0xe8, 0x9a, 0x5b, 0x50, 0x52, 0x89, 0x6c, 0x64,
	0x12, 0x1b, 0xd8, 0x42, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0x7f, 0x48, 0xc6, 0x87,
	0x00, 0x00, 0x00,
}
